/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['routes/users.js']) {
  _$jscoverage['routes/users.js'] = [];
  _$jscoverage['routes/users.js'][1] = 0;
  _$jscoverage['routes/users.js'][2] = 0;
  _$jscoverage['routes/users.js'][3] = 0;
  _$jscoverage['routes/users.js'][4] = 0;
  _$jscoverage['routes/users.js'][5] = 0;
  _$jscoverage['routes/users.js'][7] = 0;
  _$jscoverage['routes/users.js'][8] = 0;
  _$jscoverage['routes/users.js'][9] = 0;
  _$jscoverage['routes/users.js'][10] = 0;
  _$jscoverage['routes/users.js'][12] = 0;
  _$jscoverage['routes/users.js'][13] = 0;
  _$jscoverage['routes/users.js'][14] = 0;
  _$jscoverage['routes/users.js'][15] = 0;
  _$jscoverage['routes/users.js'][17] = 0;
  _$jscoverage['routes/users.js'][31] = 0;
  _$jscoverage['routes/users.js'][35] = 0;
  _$jscoverage['routes/users.js'][36] = 0;
  _$jscoverage['routes/users.js'][37] = 0;
  _$jscoverage['routes/users.js'][44] = 0;
}
_$jscoverage['routes/users.js'].source = ["<span class=\"k\">var</span> express <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">'express'</span><span class=\"k\">);</span>","<span class=\"k\">var</span> router <span class=\"k\">=</span> express<span class=\"k\">.</span>Router<span class=\"k\">();</span>","<span class=\"k\">var</span> mongoose <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">'mongoose'</span><span class=\"k\">);</span>","<span class=\"k\">var</span> User <span class=\"k\">=</span> mongoose<span class=\"k\">.</span>model<span class=\"k\">(</span><span class=\"s\">'User'</span><span class=\"k\">);</span>","<span class=\"k\">var</span> dbfunctions <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">'../databasefunctions'</span><span class=\"k\">);</span>","","router<span class=\"k\">.</span>get<span class=\"k\">(</span><span class=\"s\">'/:name'</span><span class=\"k\">,</span> dbfunctions<span class=\"k\">.</span>restricted<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>req<span class=\"k\">,</span> res<span class=\"k\">)</span> <span class=\"k\">{</span>","    console<span class=\"k\">.</span>log<span class=\"k\">(</span>req<span class=\"k\">.</span>param<span class=\"k\">(</span><span class=\"s\">\"name\"</span><span class=\"k\">));</span>","    <span class=\"k\">if</span><span class=\"k\">(</span>req<span class=\"k\">.</span>param<span class=\"k\">(</span><span class=\"s\">\"name\"</span><span class=\"k\">)</span> <span class=\"k\">!=</span> req<span class=\"k\">.</span>session<span class=\"k\">.</span>user<span class=\"k\">.</span>username<span class=\"k\">)</span> <span class=\"k\">{</span>","        User<span class=\"k\">.</span>findOne<span class=\"k\">(</span><span class=\"k\">{</span>username<span class=\"k\">:</span> req<span class=\"k\">.</span>param<span class=\"k\">(</span><span class=\"s\">\"name\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span>","\t\t     <span class=\"k\">function</span> <span class=\"k\">(</span>err<span class=\"k\">,</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t <span class=\"k\">if</span> <span class=\"k\">(</span>err<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t     <span class=\"k\">return</span> console<span class=\"k\">.</span>log<span class=\"k\">(</span>err<span class=\"k\">);</span>","\t\t\t <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(!</span>user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t     res<span class=\"k\">.</span>send<span class=\"k\">(</span><span class=\"s\">\"There is no such user\"</span><span class=\"k\">);</span>","\t\t\t <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t     res<span class=\"k\">.</span>render<span class=\"k\">(</span><span class=\"s\">'profile'</span><span class=\"k\">,</span>","\t\t\t\t\t<span class=\"k\">{</span>","\t\t\t\t\t    username<span class=\"k\">:</span> user<span class=\"k\">.</span>username<span class=\"k\">,</span>","\t\t\t\t\t    user_id<span class=\"k\">:</span> req<span class=\"k\">.</span>session<span class=\"k\">.</span>user_id<span class=\"k\">,</span>","\t\t\t\t\t    postingas<span class=\"k\">:</span> req<span class=\"k\">.</span>session<span class=\"k\">.</span>user<span class=\"k\">.</span>username<span class=\"k\">,</span>","\t\t\t\t\t    showfriends<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\t\t\t\t    photo_album<span class=\"k\">:</span> user<span class=\"k\">.</span>photo_album<span class=\"k\">,</span>","\t\t\t\t\t    friends<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","\t\t\t\t\t    show_messages<span class=\"k\">:</span> <span class=\"k\">(</span>user<span class=\"k\">.</span>friends<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>req<span class=\"k\">.</span>session<span class=\"k\">.</span>user<span class=\"k\">.</span>username<span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t <span class=\"k\">}</span>","\t\t     <span class=\"k\">}</span><span class=\"k\">);</span>","\t","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        res<span class=\"k\">.</span>redirect<span class=\"k\">(</span><span class=\"s\">'/profile'</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","router<span class=\"k\">.</span>get<span class=\"k\">(</span><span class=\"s\">'/:name/photos'</span><span class=\"k\">,</span> dbfunctions<span class=\"k\">.</span>restricted<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>req<span class=\"k\">,</span>res<span class=\"k\">)</span> <span class=\"k\">{</span>","    User<span class=\"k\">.</span>findOne<span class=\"k\">(</span><span class=\"k\">{</span>username<span class=\"k\">:</span> req<span class=\"k\">.</span>param<span class=\"k\">(</span><span class=\"s\">\"name\"</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","        res<span class=\"k\">.</span>render<span class=\"k\">(</span><span class=\"s\">'photos'</span><span class=\"k\">,</span>","            <span class=\"k\">{</span>","                user_id<span class=\"k\">:</span> req<span class=\"k\">.</span>session<span class=\"k\">.</span>user_id<span class=\"k\">,</span>","                photo_album<span class=\"k\">:</span> user<span class=\"k\">.</span>photo_album","            <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","module<span class=\"k\">.</span>exports <span class=\"k\">=</span> router<span class=\"k\">;</span>"];
_$jscoverage['routes/users.js'][1]++;
var express = require("express");
_$jscoverage['routes/users.js'][2]++;
var router = express.Router();
_$jscoverage['routes/users.js'][3]++;
var mongoose = require("mongoose");
_$jscoverage['routes/users.js'][4]++;
var User = mongoose.model("User");
_$jscoverage['routes/users.js'][5]++;
var dbfunctions = require("../databasefunctions");
_$jscoverage['routes/users.js'][7]++;
router.get("/:name", dbfunctions.restricted, (function (req, res) {
  _$jscoverage['routes/users.js'][8]++;
  console.log(req.param("name"));
  _$jscoverage['routes/users.js'][9]++;
  if ((req.param("name") != req.session.user.username)) {
    _$jscoverage['routes/users.js'][10]++;
    User.findOne({username: req.param("name")}, (function (err, user) {
  _$jscoverage['routes/users.js'][12]++;
  if (err) {
    _$jscoverage['routes/users.js'][13]++;
    return console.log(err);
  }
  else {
    _$jscoverage['routes/users.js'][14]++;
    if ((! user)) {
      _$jscoverage['routes/users.js'][15]++;
      res.send("There is no such user");
    }
    else {
      _$jscoverage['routes/users.js'][17]++;
      res.render("profile", {username: user.username, user_id: req.session.user_id, postingas: req.session.user.username, showfriends: false, photo_album: user.photo_album, friends: false, show_messages: (user.friends.indexOf(req.session.user.username) > -1)});
    }
  }
}));
  }
  else {
    _$jscoverage['routes/users.js'][31]++;
    res.redirect("/profile");
  }
}));
_$jscoverage['routes/users.js'][35]++;
router.get("/:name/photos", dbfunctions.restricted, (function (req, res) {
  _$jscoverage['routes/users.js'][36]++;
  User.findOne({username: req.param("name")}, (function (err, user) {
  _$jscoverage['routes/users.js'][37]++;
  res.render("photos", {user_id: req.session.user_id, photo_album: user.photo_album});
}));
}));
_$jscoverage['routes/users.js'][44]++;
module.exports = router;
